{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template: Create a single EC2 instance supporting Java. This template demonstrates using the AWS CloudFormation bootstrap scripts to install the packages and files necessary to deploy the java app. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",

  "Parameters" : {

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "ImageId" : {
      "Description" : "Server image type",
      "Type" : "String",
      "Default" : "ami-0d8f6eb4f641ef691",
      "ConstraintDescription" : "must be a valid image id."
    },

    "InstanceType" : {
      "Description" : "Server EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "ServerVPC": {
      "Description" : "VPC for the server",
      "Type": "AWS::EC2::VPC::Id",
      "ConstraintDescription" : "must be an existing VPC."
    },

    "ServerSubnet":{
      "Description" : "Sunbnet for the server",
      "Type": "AWS::EC2::Subnet::Id",
      "ConstraintDescription" : "must be an existing Subnet."
    },

    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "Bucket" : {
      "Description" : "Bucket with the Java artifact",
      "Type": "String",
      "ConstraintDescription" : "must be an existing bucket."
    }
  },

  "Resources" : {

    "ServerInstance": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "Install" : [ "Install"]
          },
          "Install" : {
            "packages" : {
              "yum" : {
                "java-1.8.0-amazon-corretto-devel" : []
              }
            },
            "files" : {
              "/opt/myapp/springboot-helloworld-1.0.0.jar": {
                "source": {
                  "Fn::Join" :  ["",
                    [ "https://",
                      { "Ref" :  "Bucket"},
                      ".s3.",
                      { "Ref" : "AWS::Region" },
                      ".amazonaws.com/springboot-helloworld-1.0.0.jar"
                    ]
                  ]
                }
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId" : { "Ref" : "ImageId" },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroupIds": [{"Ref": "ServerSecurityGroup"}],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "amazon-linux-extras enable corretto8\n",
          "yum update -y aws-cfn-bootstrap\n",

          "# Install the files and packages from the metadata\n",
          "/opt/aws/bin/cfn-init -v ",
          "         --stack ", { "Ref" : "AWS::StackName" },
          "         --resource ServerInstance ",
          "         --configsets Install ",
          "         --region ", { "Ref" : "AWS::Region" }, "\n",

          "# Signal the status from cfn-init\n",
          "/opt/aws/bin/cfn-signal -e $? ",
          "         --stack ", { "Ref" : "AWS::StackName" },
          "         --resource ServerInstance ",
          "         --region ", { "Ref" : "AWS::Region" }, "\n",

          "sudo nohup java -jar /opt/myapp/springboot-helloworld-1.0.0.jar\n"
        ]]}}
      },
      "CreationPolicy" : {
        "ResourceSignal" : {
          "Timeout" : "PT15M"
        }
      }
    },

    "ServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 8080",
        "VpcId": {"Ref": "ServerVPC"},
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }
    }
  },

  "Outputs" : {
    "ServerURL" : {
      "Description" : "URL for the server",
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "ServerInstance", "PublicDnsName" ]}, ":8080"]] }
    }
  }
}
